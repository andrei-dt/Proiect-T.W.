{"version":3,"sources":["QuotesList.js","AddQuote.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteItem","props","quote","value","useState","quoteText","setQuoteText","lang","setLang","translationText","setTranslationText","addTranslation","setAddTranslation","translations","length","sort","a","b","Date","createdAt","getTime","undefined","translation","setTranslation","hideTranslation","className","title","onClick","quoteAuthor","onRemove","id","onChange","ev","target","placeholder","body","text","fetch","JSON","stringify","then","response","json","message","alert","catch","err","console","log","handleTranslate","langs","map","source","quoteId","handleSave","QuotesList","listItems","quotes","toString","AddQuote","setQuoteAuthor","reset","onSubmit","e","preventDefault","style","marginTop","type","marginBottom","overflow","float","fontSize","author","onAdd","App","setQuotes","setLangs","useEffect","getQuotes","languages","handleRemove","item","_quotes","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.860ef876.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction QuoteItem(props) {\n    const quote = props.value;\n    const [quoteText, setQuoteText] = useState(quote.quoteText);\n    const [lang, setLang] = useState('ro');\n    const [translationText, setTranslationText] = useState('');\n    const [addTranslation, setAddTranslation] = useState(false);\n    const [translation, setTranslation] = useState(quote.translations.length > 0 ? quote.translations.sort((a, b) => new Date(a.createdAt).getTime() > new Date(b.createdAt).getTime())[0] : undefined);\n\n    const hideTranslation = () => {\n        setAddTranslation(false);\n        setLang(\"ro\");\n        setTranslationText('');\n    }\n\n    const handleTranslate = () => {\n        const body = {\n            lang: lang,\n            text: quote.quoteText\n        };\n        fetch(\"http://localhost:8080/api/translate\", {\n            \"method\": \"POST\",\n            \"headers\": { \"Content-Type\": \"application/json\" },\n            \"body\": JSON.stringify(body)\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response.message) {\n                    alert(response.message);\n                } else setTranslationText(response.translation);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n\n    const handleSave = () => {\n        const body = {\n            translation: translationText, lang: lang, source: 'auto', quoteId: quote.id\n        };\n        fetch(\"http://localhost:8080/api/quotes/add-translation\", {\n            \"method\": \"POST\",\n            \"headers\": { \"Content-Type\": \"application/json\" },\n            \"body\": JSON.stringify(body)\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response.message) {\n                    alert(response.message);\n                } else {\n                    hideTranslation();\n                    setTranslation(response);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n    return <li className={`quote-item`} key={quote}>\n        <div className={`quote-text  ${translation ? \"active\" : \"\"}`} title={translation ? \"Click to see last translation\" : \"Missing translation\"} onClick={() => setQuoteText(quoteText === quote.quoteText && translation ? translation.translationText : quote.quoteText)}>“{quoteText}”</div>\n        <div className=\"quote-author\">{quote.quoteAuthor}</div>\n        {!addTranslation ? <div className=\"quote-actions\">\n            {!translation ? <button className='btn btn-add-translation' onClick={() => setAddTranslation(true)}>Add translation</button> : null}\n            <button className='btn btn-remove' onClick={() => props.onRemove(quote.id)}>Remove</button>\n        </div> : null}\n        {addTranslation ? <div className=\"quote-translation\">\n            <textarea value={translationText} onChange={(ev) => setTranslationText(ev.target.value)} placeholder=\"Translation here...\" className=\"quote-input\"></textarea>\n            <div className=\"quote-translation-actions\">\n                <button className='btn' onClick={() => hideTranslation()}>Cancel</button>\n                <div>\n                    <button className='btn' onClick={() => handleTranslate()}>Translate</button>\n                    <select value={lang} onChange={(ev) => setLang(ev.target.value)}>\n                        {props.langs.map(lang => <option key={lang} value={lang}>{lang}</option>)}\n                    </select>\n                    <button className='btn' onClick={() => handleSave()}>Save</button></div>\n            </div>\n        </div> : null}\n    </li>;\n}\n\nexport function QuotesList(props) {\n    const quotes = props.quotes;\n    const listItems = quotes.map((quote) =>\n        <QuoteItem key={quote.id.toString()} value={quote} langs={props.langs} onRemove={(id) => props.onRemove(id)} />);\n    return (\n        <ul className=\"quotes-list\">\n            {listItems}\n        </ul>\n    );\n}\n","import React, { useState } from 'react';\n\nexport function AddQuote(props) {\n    const [quoteText, setQuoteText] = useState('');\n    const [quoteAuthor, setQuoteAuthor] = useState('');\n    const [lang, setLang] = useState('ro');\n    const [translationText, setTranslationText] = useState('');\n\n    const reset = () => {\n        setQuoteText('');\n        setQuoteAuthor('');\n        setLang(\"ro\");\n        setTranslationText('');\n    }\n\n    const handleTranslate = () => {\n        const body = {\n            lang: lang,\n            text: quoteText\n        };\n        fetch(\"http://localhost:8080/api/translate\", {\n            \"method\": \"POST\",\n            \"headers\": { \"Content-Type\": \"application/json\" },\n            \"body\": JSON.stringify(body)\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response.message) {\n                    alert(response.message);\n                } else setTranslationText(response.translation);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const handleSave = (ev) => {\n        ev.preventDefault();\n        const translations = translationText ? [{ translation: translationText, lang: lang, source: 'auto' }] : []\n        const body = {\n            quote: quoteText, author: quoteAuthor, translations: translations\n\n        };\n        fetch(\"http://localhost:8080/api/quotes\", {\n            \"method\": \"POST\",\n            \"headers\": { \"Content-Type\": \"application/json\" },\n            \"body\": JSON.stringify(body)\n        })\n            .then(response => response.json())\n            .then(response => {\n                if (response.message) {\n                    alert(response.message);\n                } else {\n                    reset();\n                    props.onAdd(response);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }\n    return <form onSubmit={e => e.preventDefault()}>\n        <p style={{ marginTop: 0 }}>\n            <label>\n                Quote:\n                <textarea placeholder=\"Quote here...\" className=\"quote-input\" value={quoteText} onChange={(ev) => setQuoteText(ev.target.value)}></textarea>\n            </label>\n        </p>\n\n        <p>\n            <label>\n                Author:\n                <input placeholder=\"Author here...\" className=\"quote-input\" type=\"text\" value={quoteAuthor} onChange={(ev) => setQuoteAuthor(ev.target.value)} />\n            </label>\n        </p>\n        <div className=\"quote-translation\" style={{ marginBottom: '10px', overflow: 'auto' }}>\n            <textarea value={translationText} onChange={(ev) => setTranslationText(ev.target.value)} placeholder=\"Translation here...\" className=\"quote-input\"></textarea>\n            <div style={{ float: 'right' }}>\n                <button className='btn' onClick={() => handleTranslate()}>Translate</button>\n                <select value={lang} onChange={(ev) => setLang(ev.target.value)}>\n                    {props.langs.map(lang => <option key={lang} value={lang}>{lang}</option>)}\n                </select>\n            </div>\n        </div>\n\n        <div style={{ float: 'clear' }}>\n            <button className='btn' onClick={() => reset()}>Reset</button>\n            <button className='btn' style={{ float: 'right', fontSize: '16px' }} onClick={(ev) => handleSave(ev)}>Save</button>\n        </div>\n    </form>;\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { QuotesList } from './QuotesList';\nimport { AddQuote } from './AddQuote';\n\nfunction App() {\n  const [quotes, setQuotes] = useState([]);\n\n  const [langs, setLangs] = useState([]);\n  useEffect(() => {\n    getQuotes();\n    fetch(\"http://localhost:8080/api/translate/langs\", {\n      \"method\": \"GET\"\n    })\n      .then(response => response.json())\n      .then(response => {\n        setLangs(response.languages);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [])\n  const handleRemove = (id) => {\n    fetch(`http://localhost:8080/api/quotes/${id}`, {\n      \"method\": \"DELETE\",\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response.message) {\n          alert(response.message);\n        }\n        getQuotes();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  const getQuotes = () => {\n    fetch(\"http://localhost:8080/api/quotes\", {\n      \"method\": \"GET\"\n    })\n      .then(response => response.json())\n      .then(response => {\n        setQuotes(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  const onAdd = (item) => {\n    const _quotes = [...quotes];\n    _quotes.push(item);\n    setQuotes(_quotes);\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Quote Manager</h1>\n      </header>\n      <section className=\"App-content\">\n        <div className=\"App-col App-quotes\">\n          <h6>Quotes</h6>\n          <QuotesList langs={langs} quotes={quotes} onRemove={(id) => handleRemove(id)} />,\n        </div>\n        <div className=\"App-col App-quote\">\n          <h6>Add quote</h6>\n          <AddQuote langs={langs} onAdd={(item) => onAdd(item)} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}